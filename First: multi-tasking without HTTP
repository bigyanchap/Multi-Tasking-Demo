//Multi-tasking Demo on nodeMCU 1.0 ESP 12E module
//Composed by Bigyan Chapagain. October 12, 2017.
#include <Ticker.h>
Ticker ticker;
unsigned long counter=-1;//counter:global var
//D2,D6 interrupt pins
//Rx pin, led is connected that get controlled through push buttons
const int onPin=D6;//Connect a push-button that feeds 3V3 to nodeMCU
const int offPin=D2;//Connect another push-button that feeds 3V3 to nodeMCU
const int outLed=3;//Connect a LED to gpio3 -- the Rx pin (not use for Tx-Rx)
const int debounceInterval=200;
unsigned long prevMillis4Off=0;//prevMillis:global var
unsigned long prevMillis4On=0;
void setup() {
  pinMode(outLed,OUTPUT);//Rx pin, gpio3
  //pins D0, D1, D3, D4, D5 are connected to LEDs.
  //They form ring counter.
  pinMode(D0,OUTPUT);
  pinMode(D1,OUTPUT);
  pinMode(D3,OUTPUT);
  pinMode(D4,OUTPUT);
  pinMode(D5,OUTPUT);
  ticker.attach(1,isrRingCounter);//timer interrupt
  attachInterrupt(onPin, onIsr, FALLING);//hardware Interrupt
  attachInterrupt(offPin, offIsr, FALLING);//hardware Interrupt
}
void loop() {}
//Hardware Interrupts
void offIsr(){
  unsigned long Millis=millis();
  if(Millis-prevMillis4Off>debounceInterval){
    digitalWrite(outLed,LOW);
    
  }
  prevMillis4Off=Millis;
}
void onIsr(){
  unsigned long Millis=millis();
  if(Millis-prevMillis4On>debounceInterval){
    digitalWrite(outLed,HIGH);
    
  }
  prevMillis4On=Millis;
}
//Timer Interrupt Service Routine
void isrRingCounter(){
  counter++;
  int mod=counter%5;
  switch(mod){
    case 1:
      digitalWrite(D0,HIGH);
      digitalWrite(D5,LOW);
      break;
    case 2:
      digitalWrite(D1,HIGH);
      digitalWrite(D0,LOW);
      break;
    case 3:
      digitalWrite(D3,HIGH);
      digitalWrite(D1,LOW);
      break;
    case 4:
      digitalWrite(D4,HIGH);
      digitalWrite(D3,LOW);
      break;
    default:
      digitalWrite(D5,HIGH);
      digitalWrite(D4,LOW);
      break;
  }
}
